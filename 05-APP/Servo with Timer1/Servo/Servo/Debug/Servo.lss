
Servo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000055a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  0000055a  000005ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800080  00800080  0000060e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000060e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000640  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  0000067c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000148a  00000000  00000000  00000844  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008d0  00000000  00000000  00001cce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c74  00000000  00000000  0000259e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004a0  00000000  00000000  00003214  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000bf1  00000000  00000000  000036b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012a4  00000000  00000000  000042a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00005549  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 31 00 	jmp	0x62	; 0x62 <__ctors_end>
   4:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   8:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  10:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  14:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  18:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  1c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  20:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  24:	0c 94 4b 02 	jmp	0x496	; 0x496 <__vector_9>
  28:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__vector_10>
  2c:	0c 94 48 01 	jmp	0x290	; 0x290 <__vector_11>
  30:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  34:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  38:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  3c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  40:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  44:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  48:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  4c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  50:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  54:	a4 01       	movw	r20, r8
  56:	b1 01       	movw	r22, r2
  58:	be 01       	movw	r22, r28
  5a:	cb 01       	movw	r24, r22
  5c:	d8 01       	movw	r26, r16
  5e:	e5 01       	movw	r28, r10
  60:	f2 01       	movw	r30, r4

00000062 <__ctors_end>:
  62:	11 24       	eor	r1, r1
  64:	1f be       	out	0x3f, r1	; 63
  66:	cf e5       	ldi	r28, 0x5F	; 95
  68:	d8 e0       	ldi	r29, 0x08	; 8
  6a:	de bf       	out	0x3e, r29	; 62
  6c:	cd bf       	out	0x3d, r28	; 61

0000006e <__do_copy_data>:
  6e:	10 e0       	ldi	r17, 0x00	; 0
  70:	a0 e6       	ldi	r26, 0x60	; 96
  72:	b0 e0       	ldi	r27, 0x00	; 0
  74:	ea e5       	ldi	r30, 0x5A	; 90
  76:	f5 e0       	ldi	r31, 0x05	; 5
  78:	02 c0       	rjmp	.+4      	; 0x7e <__do_copy_data+0x10>
  7a:	05 90       	lpm	r0, Z+
  7c:	0d 92       	st	X+, r0
  7e:	a0 38       	cpi	r26, 0x80	; 128
  80:	b1 07       	cpc	r27, r17
  82:	d9 f7       	brne	.-10     	; 0x7a <__do_copy_data+0xc>

00000084 <__do_clear_bss>:
  84:	20 e0       	ldi	r18, 0x00	; 0
  86:	a0 e8       	ldi	r26, 0x80	; 128
  88:	b0 e0       	ldi	r27, 0x00	; 0
  8a:	01 c0       	rjmp	.+2      	; 0x8e <.do_clear_bss_start>

0000008c <.do_clear_bss_loop>:
  8c:	1d 92       	st	X+, r1

0000008e <.do_clear_bss_start>:
  8e:	a6 38       	cpi	r26, 0x86	; 134
  90:	b2 07       	cpc	r27, r18
  92:	e1 f7       	brne	.-8      	; 0x8c <.do_clear_bss_loop>
  94:	0e 94 61 00 	call	0xc2	; 0xc2 <main>
  98:	0c 94 ab 02 	jmp	0x556	; 0x556 <_exit>

0000009c <__bad_interrupt>:
  9c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a0 <SERVO_SetAngle>:
	ICR1=19999;
}

void SERVO_SetAngle(u8 angle)
{
	OCR1B=(((u32)angle*1000)/180)+999;
  a0:	28 2f       	mov	r18, r24
  a2:	30 e0       	ldi	r19, 0x00	; 0
  a4:	a8 ee       	ldi	r26, 0xE8	; 232
  a6:	b3 e0       	ldi	r27, 0x03	; 3
  a8:	0e 94 9c 02 	call	0x538	; 0x538 <__umulhisi3>
  ac:	24 eb       	ldi	r18, 0xB4	; 180
  ae:	30 e0       	ldi	r19, 0x00	; 0
  b0:	40 e0       	ldi	r20, 0x00	; 0
  b2:	50 e0       	ldi	r21, 0x00	; 0
  b4:	0e 94 74 02 	call	0x4e8	; 0x4e8 <__udivmodsi4>
  b8:	29 51       	subi	r18, 0x19	; 25
  ba:	3c 4f       	sbci	r19, 0xFC	; 252
  bc:	39 bd       	out	0x29, r19	; 41
  be:	28 bd       	out	0x28, r18	; 40
  c0:	08 95       	ret

000000c2 <main>:
#include "Servo_interface.h"


int main(void)
{
    DIO_Init();
  c2:	0e 94 71 00 	call	0xe2	; 0xe2 <DIO_Init>
	Timer1_Init(TIMER1_FASTPWM_ICR_TOP_MODE,TIMER1_SCALER_8,OCRA_NON_INVERTING,OCRB_NON_INVERTING);
  c6:	22 e0       	ldi	r18, 0x02	; 2
  c8:	42 e0       	ldi	r20, 0x02	; 2
  ca:	62 e0       	ldi	r22, 0x02	; 2
  cc:	83 e0       	ldi	r24, 0x03	; 3
  ce:	0e 94 9a 01 	call	0x334	; 0x334 <Timer1_Init>
	ICR1=19999;
  d2:	8f e1       	ldi	r24, 0x1F	; 31
  d4:	9e e4       	ldi	r25, 0x4E	; 78
  d6:	97 bd       	out	0x27, r25	; 39
  d8:	86 bd       	out	0x26, r24	; 38
	
    while (1) 
    {
		SERVO_SetAngle(90);
  da:	8a e5       	ldi	r24, 0x5A	; 90
  dc:	0e 94 50 00 	call	0xa0	; 0xa0 <SERVO_SetAngle>
  e0:	fc cf       	rjmp	.-8      	; 0xda <main+0x18>

000000e2 <DIO_Init>:
#include "DIO_interface.h"

void DIO_Init(void)
{
  e2:	e0 e6       	ldi	r30, 0x60	; 96
  e4:	f0 e0       	ldi	r31, 0x00	; 0
	u8 PinNum_InPort;
	Port_type Port;
	PinStatus_type Status;
	u8 LocalIterator;
	
	for (LocalIterator=0;LocalIterator<TOTAL_PINS;LocalIterator++)
  e6:	80 e0       	ldi	r24, 0x00	; 0
				case PA:
				CLEAR_BIT(DDRA,PinNum_InPort);
				SET_BIT(PORTA,PinNum_InPort);
				break;
				case PB:
				CLEAR_BIT(DDRB,PinNum_InPort);
  e8:	41 e0       	ldi	r20, 0x01	; 1
  ea:	50 e0       	ldi	r21, 0x00	; 0
	PinStatus_type Status;
	u8 LocalIterator;
	
	for (LocalIterator=0;LocalIterator<TOTAL_PINS;LocalIterator++)
	{
		Status=PinsStatus[LocalIterator];
  ec:	91 91       	ld	r25, Z+
		Port=LocalIterator/8;
  ee:	28 2f       	mov	r18, r24
  f0:	26 95       	lsr	r18
  f2:	26 95       	lsr	r18
  f4:	26 95       	lsr	r18
		PinNum_InPort=LocalIterator%8;
  f6:	38 2f       	mov	r19, r24
  f8:	37 70       	andi	r19, 0x07	; 7
		
		switch (Status)
  fa:	91 30       	cpi	r25, 0x01	; 1
  fc:	c9 f1       	breq	.+114    	; 0x170 <DIO_Init+0x8e>
  fe:	20 f0       	brcs	.+8      	; 0x108 <DIO_Init+0x26>
 100:	92 30       	cpi	r25, 0x02	; 2
 102:	09 f4       	brne	.+2      	; 0x106 <DIO_Init+0x24>
 104:	7d c0       	rjmp	.+250    	; 0x200 <DIO_Init+0x11e>
 106:	bf c0       	rjmp	.+382    	; 0x286 <DIO_Init+0x1a4>
		{
			case OUTPUT:
			switch (Port)
 108:	21 30       	cpi	r18, 0x01	; 1
 10a:	89 f0       	breq	.+34     	; 0x12e <DIO_Init+0x4c>
 10c:	28 f0       	brcs	.+10     	; 0x118 <DIO_Init+0x36>
 10e:	22 30       	cpi	r18, 0x02	; 2
 110:	c9 f0       	breq	.+50     	; 0x144 <DIO_Init+0x62>
 112:	23 30       	cpi	r18, 0x03	; 3
 114:	11 f1       	breq	.+68     	; 0x15a <DIO_Init+0x78>
 116:	b7 c0       	rjmp	.+366    	; 0x286 <DIO_Init+0x1a4>
			{
				case PA:
				SET_BIT(DDRA,PinNum_InPort);
 118:	9a b3       	in	r25, 0x1a	; 26
 11a:	ba 01       	movw	r22, r20
 11c:	02 c0       	rjmp	.+4      	; 0x122 <DIO_Init+0x40>
 11e:	66 0f       	add	r22, r22
 120:	77 1f       	adc	r23, r23
 122:	3a 95       	dec	r19
 124:	e2 f7       	brpl	.-8      	; 0x11e <DIO_Init+0x3c>
 126:	9b 01       	movw	r18, r22
 128:	29 2b       	or	r18, r25
 12a:	2a bb       	out	0x1a, r18	; 26
				break;
 12c:	ac c0       	rjmp	.+344    	; 0x286 <DIO_Init+0x1a4>
				case PB:
				SET_BIT(DDRB,PinNum_InPort);
 12e:	97 b3       	in	r25, 0x17	; 23
 130:	ba 01       	movw	r22, r20
 132:	02 c0       	rjmp	.+4      	; 0x138 <DIO_Init+0x56>
 134:	66 0f       	add	r22, r22
 136:	77 1f       	adc	r23, r23
 138:	3a 95       	dec	r19
 13a:	e2 f7       	brpl	.-8      	; 0x134 <DIO_Init+0x52>
 13c:	9b 01       	movw	r18, r22
 13e:	29 2b       	or	r18, r25
 140:	27 bb       	out	0x17, r18	; 23
				break;
 142:	a1 c0       	rjmp	.+322    	; 0x286 <DIO_Init+0x1a4>
				case PC:
				SET_BIT(DDRC,PinNum_InPort);
 144:	94 b3       	in	r25, 0x14	; 20
 146:	ba 01       	movw	r22, r20
 148:	02 c0       	rjmp	.+4      	; 0x14e <DIO_Init+0x6c>
 14a:	66 0f       	add	r22, r22
 14c:	77 1f       	adc	r23, r23
 14e:	3a 95       	dec	r19
 150:	e2 f7       	brpl	.-8      	; 0x14a <DIO_Init+0x68>
 152:	9b 01       	movw	r18, r22
 154:	29 2b       	or	r18, r25
 156:	24 bb       	out	0x14, r18	; 20
				break;
 158:	96 c0       	rjmp	.+300    	; 0x286 <DIO_Init+0x1a4>
				case PD:
				SET_BIT(DDRD,PinNum_InPort);
 15a:	91 b3       	in	r25, 0x11	; 17
 15c:	ba 01       	movw	r22, r20
 15e:	02 c0       	rjmp	.+4      	; 0x164 <DIO_Init+0x82>
 160:	66 0f       	add	r22, r22
 162:	77 1f       	adc	r23, r23
 164:	3a 95       	dec	r19
 166:	e2 f7       	brpl	.-8      	; 0x160 <DIO_Init+0x7e>
 168:	9b 01       	movw	r18, r22
 16a:	29 2b       	or	r18, r25
 16c:	21 bb       	out	0x11, r18	; 17
				break;
 16e:	8b c0       	rjmp	.+278    	; 0x286 <DIO_Init+0x1a4>
			}
			break;
			case INPULLUP:
			switch (Port)
 170:	21 30       	cpi	r18, 0x01	; 1
 172:	b1 f0       	breq	.+44     	; 0x1a0 <DIO_Init+0xbe>
 174:	28 f0       	brcs	.+10     	; 0x180 <DIO_Init+0x9e>
 176:	22 30       	cpi	r18, 0x02	; 2
 178:	19 f1       	breq	.+70     	; 0x1c0 <DIO_Init+0xde>
 17a:	23 30       	cpi	r18, 0x03	; 3
 17c:	89 f1       	breq	.+98     	; 0x1e0 <DIO_Init+0xfe>
 17e:	83 c0       	rjmp	.+262    	; 0x286 <DIO_Init+0x1a4>
			{
				case PA:
				CLEAR_BIT(DDRA,PinNum_InPort);
 180:	9a b3       	in	r25, 0x1a	; 26
 182:	ba 01       	movw	r22, r20
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_Init+0xa8>
 186:	66 0f       	add	r22, r22
 188:	77 1f       	adc	r23, r23
 18a:	3a 95       	dec	r19
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_Init+0xa4>
 18e:	9b 01       	movw	r18, r22
 190:	36 2f       	mov	r19, r22
 192:	30 95       	com	r19
 194:	93 23       	and	r25, r19
 196:	9a bb       	out	0x1a, r25	; 26
				SET_BIT(PORTA,PinNum_InPort);
 198:	9b b3       	in	r25, 0x1b	; 27
 19a:	29 2b       	or	r18, r25
 19c:	2b bb       	out	0x1b, r18	; 27
				break;
 19e:	73 c0       	rjmp	.+230    	; 0x286 <DIO_Init+0x1a4>
				case PB:
				CLEAR_BIT(DDRB,PinNum_InPort);
 1a0:	97 b3       	in	r25, 0x17	; 23
 1a2:	ba 01       	movw	r22, r20
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_Init+0xc8>
 1a6:	66 0f       	add	r22, r22
 1a8:	77 1f       	adc	r23, r23
 1aa:	3a 95       	dec	r19
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_Init+0xc4>
 1ae:	9b 01       	movw	r18, r22
 1b0:	36 2f       	mov	r19, r22
 1b2:	30 95       	com	r19
 1b4:	93 23       	and	r25, r19
 1b6:	97 bb       	out	0x17, r25	; 23
				SET_BIT(PORTB,PinNum_InPort);
 1b8:	98 b3       	in	r25, 0x18	; 24
 1ba:	29 2b       	or	r18, r25
 1bc:	28 bb       	out	0x18, r18	; 24
				break;
 1be:	63 c0       	rjmp	.+198    	; 0x286 <DIO_Init+0x1a4>
				case PC:
				CLEAR_BIT(DDRC,PinNum_InPort);
 1c0:	94 b3       	in	r25, 0x14	; 20
 1c2:	ba 01       	movw	r22, r20
 1c4:	02 c0       	rjmp	.+4      	; 0x1ca <DIO_Init+0xe8>
 1c6:	66 0f       	add	r22, r22
 1c8:	77 1f       	adc	r23, r23
 1ca:	3a 95       	dec	r19
 1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <DIO_Init+0xe4>
 1ce:	9b 01       	movw	r18, r22
 1d0:	36 2f       	mov	r19, r22
 1d2:	30 95       	com	r19
 1d4:	93 23       	and	r25, r19
 1d6:	94 bb       	out	0x14, r25	; 20
				SET_BIT(PORTC,PinNum_InPort);
 1d8:	95 b3       	in	r25, 0x15	; 21
 1da:	29 2b       	or	r18, r25
 1dc:	25 bb       	out	0x15, r18	; 21
				break;
 1de:	53 c0       	rjmp	.+166    	; 0x286 <DIO_Init+0x1a4>
				case PD:
				CLEAR_BIT(DDRD,PinNum_InPort);
 1e0:	91 b3       	in	r25, 0x11	; 17
 1e2:	ba 01       	movw	r22, r20
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <DIO_Init+0x108>
 1e6:	66 0f       	add	r22, r22
 1e8:	77 1f       	adc	r23, r23
 1ea:	3a 95       	dec	r19
 1ec:	e2 f7       	brpl	.-8      	; 0x1e6 <DIO_Init+0x104>
 1ee:	9b 01       	movw	r18, r22
 1f0:	36 2f       	mov	r19, r22
 1f2:	30 95       	com	r19
 1f4:	93 23       	and	r25, r19
 1f6:	91 bb       	out	0x11, r25	; 17
				SET_BIT(PORTD,PinNum_InPort);
 1f8:	92 b3       	in	r25, 0x12	; 18
 1fa:	29 2b       	or	r18, r25
 1fc:	22 bb       	out	0x12, r18	; 18
				break;
 1fe:	43 c0       	rjmp	.+134    	; 0x286 <DIO_Init+0x1a4>
			}
			break;
			case INPUT:
			switch (Port)
 200:	21 30       	cpi	r18, 0x01	; 1
 202:	a9 f0       	breq	.+42     	; 0x22e <DIO_Init+0x14c>
 204:	28 f0       	brcs	.+10     	; 0x210 <DIO_Init+0x12e>
 206:	22 30       	cpi	r18, 0x02	; 2
 208:	09 f1       	breq	.+66     	; 0x24c <DIO_Init+0x16a>
 20a:	23 30       	cpi	r18, 0x03	; 3
 20c:	71 f1       	breq	.+92     	; 0x26a <DIO_Init+0x188>
 20e:	3b c0       	rjmp	.+118    	; 0x286 <DIO_Init+0x1a4>
			{
				case PA:
				CLEAR_BIT(DDRA,PinNum_InPort);
 210:	9a b3       	in	r25, 0x1a	; 26
 212:	ba 01       	movw	r22, r20
 214:	02 c0       	rjmp	.+4      	; 0x21a <DIO_Init+0x138>
 216:	66 0f       	add	r22, r22
 218:	77 1f       	adc	r23, r23
 21a:	3a 95       	dec	r19
 21c:	e2 f7       	brpl	.-8      	; 0x216 <DIO_Init+0x134>
 21e:	9b 01       	movw	r18, r22
 220:	20 95       	com	r18
 222:	92 23       	and	r25, r18
 224:	9a bb       	out	0x1a, r25	; 26
				CLEAR_BIT(PORTA,PinNum_InPort);
 226:	9b b3       	in	r25, 0x1b	; 27
 228:	29 23       	and	r18, r25
 22a:	2b bb       	out	0x1b, r18	; 27
				break;
 22c:	2c c0       	rjmp	.+88     	; 0x286 <DIO_Init+0x1a4>
				case PB:
				CLEAR_BIT(DDRB,PinNum_InPort);
 22e:	97 b3       	in	r25, 0x17	; 23
 230:	ba 01       	movw	r22, r20
 232:	02 c0       	rjmp	.+4      	; 0x238 <DIO_Init+0x156>
 234:	66 0f       	add	r22, r22
 236:	77 1f       	adc	r23, r23
 238:	3a 95       	dec	r19
 23a:	e2 f7       	brpl	.-8      	; 0x234 <DIO_Init+0x152>
 23c:	9b 01       	movw	r18, r22
 23e:	20 95       	com	r18
 240:	92 23       	and	r25, r18
 242:	97 bb       	out	0x17, r25	; 23
				CLEAR_BIT(PORTB,PinNum_InPort);
 244:	98 b3       	in	r25, 0x18	; 24
 246:	29 23       	and	r18, r25
 248:	28 bb       	out	0x18, r18	; 24
				break;
 24a:	1d c0       	rjmp	.+58     	; 0x286 <DIO_Init+0x1a4>
				case PC:
				CLEAR_BIT(DDRC,PinNum_InPort);
 24c:	94 b3       	in	r25, 0x14	; 20
 24e:	ba 01       	movw	r22, r20
 250:	02 c0       	rjmp	.+4      	; 0x256 <DIO_Init+0x174>
 252:	66 0f       	add	r22, r22
 254:	77 1f       	adc	r23, r23
 256:	3a 95       	dec	r19
 258:	e2 f7       	brpl	.-8      	; 0x252 <DIO_Init+0x170>
 25a:	9b 01       	movw	r18, r22
 25c:	20 95       	com	r18
 25e:	92 23       	and	r25, r18
 260:	94 bb       	out	0x14, r25	; 20
				CLEAR_BIT(PORTC,PinNum_InPort);
 262:	95 b3       	in	r25, 0x15	; 21
 264:	29 23       	and	r18, r25
 266:	25 bb       	out	0x15, r18	; 21
				break;
 268:	0e c0       	rjmp	.+28     	; 0x286 <DIO_Init+0x1a4>
				case PD:
				CLEAR_BIT(DDRD,PinNum_InPort);
 26a:	91 b3       	in	r25, 0x11	; 17
 26c:	ba 01       	movw	r22, r20
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_Init+0x192>
 270:	66 0f       	add	r22, r22
 272:	77 1f       	adc	r23, r23
 274:	3a 95       	dec	r19
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_Init+0x18e>
 278:	9b 01       	movw	r18, r22
 27a:	20 95       	com	r18
 27c:	92 23       	and	r25, r18
 27e:	91 bb       	out	0x11, r25	; 17
				CLEAR_BIT(PORTD,PinNum_InPort);
 280:	92 b3       	in	r25, 0x12	; 18
 282:	29 23       	and	r18, r25
 284:	22 bb       	out	0x12, r18	; 18
	u8 PinNum_InPort;
	Port_type Port;
	PinStatus_type Status;
	u8 LocalIterator;
	
	for (LocalIterator=0;LocalIterator<TOTAL_PINS;LocalIterator++)
 286:	8f 5f       	subi	r24, 0xFF	; 255
 288:	80 32       	cpi	r24, 0x20	; 32
 28a:	09 f0       	breq	.+2      	; 0x28e <DIO_Init+0x1ac>
 28c:	2f cf       	rjmp	.-418    	; 0xec <DIO_Init+0xa>
			}
			break;
		}
		
	}
}
 28e:	08 95       	ret

00000290 <__vector_11>:
{
	Timer1_OCB_Fptr=LocalFptr;
}
void Timer1_ICU_SetCallBack(void(*LocalFptr)(void))
{
	Timer1_ICU_Fptr=LocalFptr;
 290:	1f 92       	push	r1
 292:	0f 92       	push	r0
 294:	0f b6       	in	r0, 0x3f	; 63
 296:	0f 92       	push	r0
 298:	11 24       	eor	r1, r1
 29a:	2f 93       	push	r18
 29c:	3f 93       	push	r19
 29e:	4f 93       	push	r20
 2a0:	5f 93       	push	r21
 2a2:	6f 93       	push	r22
 2a4:	7f 93       	push	r23
 2a6:	8f 93       	push	r24
 2a8:	9f 93       	push	r25
 2aa:	af 93       	push	r26
 2ac:	bf 93       	push	r27
 2ae:	ef 93       	push	r30
 2b0:	ff 93       	push	r31
 2b2:	e0 91 82 00 	lds	r30, 0x0082	; 0x800082 <Timer0_OVF_Fptr>
 2b6:	f0 91 83 00 	lds	r31, 0x0083	; 0x800083 <Timer0_OVF_Fptr+0x1>
 2ba:	30 97       	sbiw	r30, 0x00	; 0
 2bc:	09 f0       	breq	.+2      	; 0x2c0 <__vector_11+0x30>
 2be:	09 95       	icall
 2c0:	ff 91       	pop	r31
 2c2:	ef 91       	pop	r30
 2c4:	bf 91       	pop	r27
 2c6:	af 91       	pop	r26
 2c8:	9f 91       	pop	r25
 2ca:	8f 91       	pop	r24
 2cc:	7f 91       	pop	r23
 2ce:	6f 91       	pop	r22
 2d0:	5f 91       	pop	r21
 2d2:	4f 91       	pop	r20
 2d4:	3f 91       	pop	r19
 2d6:	2f 91       	pop	r18
 2d8:	0f 90       	pop	r0
 2da:	0f be       	out	0x3f, r0	; 63
 2dc:	0f 90       	pop	r0
 2de:	1f 90       	pop	r1
 2e0:	18 95       	reti

000002e2 <__vector_10>:
 2e2:	1f 92       	push	r1
 2e4:	0f 92       	push	r0
 2e6:	0f b6       	in	r0, 0x3f	; 63
 2e8:	0f 92       	push	r0
 2ea:	11 24       	eor	r1, r1
 2ec:	2f 93       	push	r18
 2ee:	3f 93       	push	r19
 2f0:	4f 93       	push	r20
 2f2:	5f 93       	push	r21
 2f4:	6f 93       	push	r22
 2f6:	7f 93       	push	r23
 2f8:	8f 93       	push	r24
 2fa:	9f 93       	push	r25
 2fc:	af 93       	push	r26
 2fe:	bf 93       	push	r27
 300:	ef 93       	push	r30
 302:	ff 93       	push	r31
 304:	e0 91 80 00 	lds	r30, 0x0080	; 0x800080 <__data_end>
 308:	f0 91 81 00 	lds	r31, 0x0081	; 0x800081 <__data_end+0x1>
 30c:	30 97       	sbiw	r30, 0x00	; 0
 30e:	09 f0       	breq	.+2      	; 0x312 <__vector_10+0x30>
 310:	09 95       	icall
 312:	ff 91       	pop	r31
 314:	ef 91       	pop	r30
 316:	bf 91       	pop	r27
 318:	af 91       	pop	r26
 31a:	9f 91       	pop	r25
 31c:	8f 91       	pop	r24
 31e:	7f 91       	pop	r23
 320:	6f 91       	pop	r22
 322:	5f 91       	pop	r21
 324:	4f 91       	pop	r20
 326:	3f 91       	pop	r19
 328:	2f 91       	pop	r18
 32a:	0f 90       	pop	r0
 32c:	0f be       	out	0x3f, r0	; 63
 32e:	0f 90       	pop	r0
 330:	1f 90       	pop	r1
 332:	18 95       	reti

00000334 <Timer1_Init>:
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	87 30       	cpi	r24, 0x07	; 7
 338:	91 05       	cpc	r25, r1
 33a:	08 f0       	brcs	.+2      	; 0x33e <Timer1_Init+0xa>
 33c:	5f c0       	rjmp	.+190    	; 0x3fc <Timer1_Init+0xc8>
 33e:	fc 01       	movw	r30, r24
 340:	e6 5d       	subi	r30, 0xD6	; 214
 342:	ff 4f       	sbci	r31, 0xFF	; 255
 344:	0c 94 96 02 	jmp	0x52c	; 0x52c <__tablejump2__>
 348:	8f b5       	in	r24, 0x2f	; 47
 34a:	8e 7f       	andi	r24, 0xFE	; 254
 34c:	8f bd       	out	0x2f, r24	; 47
 34e:	8f b5       	in	r24, 0x2f	; 47
 350:	8d 7f       	andi	r24, 0xFD	; 253
 352:	8f bd       	out	0x2f, r24	; 47
 354:	8e b5       	in	r24, 0x2e	; 46
 356:	87 7f       	andi	r24, 0xF7	; 247
 358:	8e bd       	out	0x2e, r24	; 46
 35a:	8e b5       	in	r24, 0x2e	; 46
 35c:	8f 7e       	andi	r24, 0xEF	; 239
 35e:	8e bd       	out	0x2e, r24	; 46
 360:	4d c0       	rjmp	.+154    	; 0x3fc <Timer1_Init+0xc8>
 362:	8f b5       	in	r24, 0x2f	; 47
 364:	8e 7f       	andi	r24, 0xFE	; 254
 366:	8f bd       	out	0x2f, r24	; 47
 368:	8f b5       	in	r24, 0x2f	; 47
 36a:	8d 7f       	andi	r24, 0xFD	; 253
 36c:	8f bd       	out	0x2f, r24	; 47
 36e:	8e b5       	in	r24, 0x2e	; 46
 370:	88 60       	ori	r24, 0x08	; 8
 372:	8e bd       	out	0x2e, r24	; 46
 374:	8e b5       	in	r24, 0x2e	; 46
 376:	80 61       	ori	r24, 0x10	; 16
 378:	8e bd       	out	0x2e, r24	; 46
 37a:	40 c0       	rjmp	.+128    	; 0x3fc <Timer1_Init+0xc8>
 37c:	8f b5       	in	r24, 0x2f	; 47
 37e:	8e 7f       	andi	r24, 0xFE	; 254
 380:	8f bd       	out	0x2f, r24	; 47
 382:	8f b5       	in	r24, 0x2f	; 47
 384:	8d 7f       	andi	r24, 0xFD	; 253
 386:	8f bd       	out	0x2f, r24	; 47
 388:	8e b5       	in	r24, 0x2e	; 46
 38a:	88 60       	ori	r24, 0x08	; 8
 38c:	8e bd       	out	0x2e, r24	; 46
 38e:	8e b5       	in	r24, 0x2e	; 46
 390:	8f 7e       	andi	r24, 0xEF	; 239
 392:	8e bd       	out	0x2e, r24	; 46
 394:	33 c0       	rjmp	.+102    	; 0x3fc <Timer1_Init+0xc8>
 396:	8f b5       	in	r24, 0x2f	; 47
 398:	8e 7f       	andi	r24, 0xFE	; 254
 39a:	8f bd       	out	0x2f, r24	; 47
 39c:	8f b5       	in	r24, 0x2f	; 47
 39e:	82 60       	ori	r24, 0x02	; 2
 3a0:	8f bd       	out	0x2f, r24	; 47
 3a2:	8e b5       	in	r24, 0x2e	; 46
 3a4:	88 60       	ori	r24, 0x08	; 8
 3a6:	8e bd       	out	0x2e, r24	; 46
 3a8:	8e b5       	in	r24, 0x2e	; 46
 3aa:	80 61       	ori	r24, 0x10	; 16
 3ac:	8e bd       	out	0x2e, r24	; 46
 3ae:	26 c0       	rjmp	.+76     	; 0x3fc <Timer1_Init+0xc8>
 3b0:	8f b5       	in	r24, 0x2f	; 47
 3b2:	81 60       	ori	r24, 0x01	; 1
 3b4:	8f bd       	out	0x2f, r24	; 47
 3b6:	8f b5       	in	r24, 0x2f	; 47
 3b8:	82 60       	ori	r24, 0x02	; 2
 3ba:	8f bd       	out	0x2f, r24	; 47
 3bc:	8e b5       	in	r24, 0x2e	; 46
 3be:	88 60       	ori	r24, 0x08	; 8
 3c0:	8e bd       	out	0x2e, r24	; 46
 3c2:	8e b5       	in	r24, 0x2e	; 46
 3c4:	80 61       	ori	r24, 0x10	; 16
 3c6:	8e bd       	out	0x2e, r24	; 46
 3c8:	19 c0       	rjmp	.+50     	; 0x3fc <Timer1_Init+0xc8>
 3ca:	8f b5       	in	r24, 0x2f	; 47
 3cc:	8e 7f       	andi	r24, 0xFE	; 254
 3ce:	8f bd       	out	0x2f, r24	; 47
 3d0:	8f b5       	in	r24, 0x2f	; 47
 3d2:	82 60       	ori	r24, 0x02	; 2
 3d4:	8f bd       	out	0x2f, r24	; 47
 3d6:	8e b5       	in	r24, 0x2e	; 46
 3d8:	87 7f       	andi	r24, 0xF7	; 247
 3da:	8e bd       	out	0x2e, r24	; 46
 3dc:	8e b5       	in	r24, 0x2e	; 46
 3de:	80 61       	ori	r24, 0x10	; 16
 3e0:	8e bd       	out	0x2e, r24	; 46
 3e2:	0c c0       	rjmp	.+24     	; 0x3fc <Timer1_Init+0xc8>
 3e4:	8f b5       	in	r24, 0x2f	; 47
 3e6:	81 60       	ori	r24, 0x01	; 1
 3e8:	8f bd       	out	0x2f, r24	; 47
 3ea:	8f b5       	in	r24, 0x2f	; 47
 3ec:	82 60       	ori	r24, 0x02	; 2
 3ee:	8f bd       	out	0x2f, r24	; 47
 3f0:	8e b5       	in	r24, 0x2e	; 46
 3f2:	87 7f       	andi	r24, 0xF7	; 247
 3f4:	8e bd       	out	0x2e, r24	; 46
 3f6:	8e b5       	in	r24, 0x2e	; 46
 3f8:	80 61       	ori	r24, 0x10	; 16
 3fa:	8e bd       	out	0x2e, r24	; 46
 3fc:	41 30       	cpi	r20, 0x01	; 1
 3fe:	69 f0       	breq	.+26     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 400:	28 f0       	brcs	.+10     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 402:	42 30       	cpi	r20, 0x02	; 2
 404:	89 f0       	breq	.+34     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 406:	43 30       	cpi	r20, 0x03	; 3
 408:	b1 f0       	breq	.+44     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 40a:	1b c0       	rjmp	.+54     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 40c:	8f b5       	in	r24, 0x2f	; 47
 40e:	8f 7b       	andi	r24, 0xBF	; 191
 410:	8f bd       	out	0x2f, r24	; 47
 412:	8f b5       	in	r24, 0x2f	; 47
 414:	8f 77       	andi	r24, 0x7F	; 127
 416:	8f bd       	out	0x2f, r24	; 47
 418:	14 c0       	rjmp	.+40     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 41a:	8f b5       	in	r24, 0x2f	; 47
 41c:	80 64       	ori	r24, 0x40	; 64
 41e:	8f bd       	out	0x2f, r24	; 47
 420:	8f b5       	in	r24, 0x2f	; 47
 422:	8f 77       	andi	r24, 0x7F	; 127
 424:	8f bd       	out	0x2f, r24	; 47
 426:	0d c0       	rjmp	.+26     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 428:	8f b5       	in	r24, 0x2f	; 47
 42a:	8f 7b       	andi	r24, 0xBF	; 191
 42c:	8f bd       	out	0x2f, r24	; 47
 42e:	8f b5       	in	r24, 0x2f	; 47
 430:	80 68       	ori	r24, 0x80	; 128
 432:	8f bd       	out	0x2f, r24	; 47
 434:	06 c0       	rjmp	.+12     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 436:	8f b5       	in	r24, 0x2f	; 47
 438:	80 64       	ori	r24, 0x40	; 64
 43a:	8f bd       	out	0x2f, r24	; 47
 43c:	8f b5       	in	r24, 0x2f	; 47
 43e:	80 68       	ori	r24, 0x80	; 128
 440:	8f bd       	out	0x2f, r24	; 47
 442:	21 30       	cpi	r18, 0x01	; 1
 444:	69 f0       	breq	.+26     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 446:	28 f0       	brcs	.+10     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 448:	22 30       	cpi	r18, 0x02	; 2
 44a:	89 f0       	breq	.+34     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 44c:	23 30       	cpi	r18, 0x03	; 3
 44e:	b1 f0       	breq	.+44     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 450:	1b c0       	rjmp	.+54     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 452:	8f b5       	in	r24, 0x2f	; 47
 454:	8f 7e       	andi	r24, 0xEF	; 239
 456:	8f bd       	out	0x2f, r24	; 47
 458:	8f b5       	in	r24, 0x2f	; 47
 45a:	8f 7d       	andi	r24, 0xDF	; 223
 45c:	8f bd       	out	0x2f, r24	; 47
 45e:	14 c0       	rjmp	.+40     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 460:	8f b5       	in	r24, 0x2f	; 47
 462:	80 61       	ori	r24, 0x10	; 16
 464:	8f bd       	out	0x2f, r24	; 47
 466:	8f b5       	in	r24, 0x2f	; 47
 468:	8f 7d       	andi	r24, 0xDF	; 223
 46a:	8f bd       	out	0x2f, r24	; 47
 46c:	0d c0       	rjmp	.+26     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 46e:	8f b5       	in	r24, 0x2f	; 47
 470:	8f 7e       	andi	r24, 0xEF	; 239
 472:	8f bd       	out	0x2f, r24	; 47
 474:	8f b5       	in	r24, 0x2f	; 47
 476:	80 62       	ori	r24, 0x20	; 32
 478:	8f bd       	out	0x2f, r24	; 47
 47a:	06 c0       	rjmp	.+12     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 47c:	8f b5       	in	r24, 0x2f	; 47
 47e:	80 61       	ori	r24, 0x10	; 16
 480:	8f bd       	out	0x2f, r24	; 47
 482:	8f b5       	in	r24, 0x2f	; 47
 484:	80 62       	ori	r24, 0x20	; 32
 486:	8f bd       	out	0x2f, r24	; 47
 488:	8e b5       	in	r24, 0x2e	; 46
 48a:	88 7f       	andi	r24, 0xF8	; 248
 48c:	8e bd       	out	0x2e, r24	; 46
 48e:	8e b5       	in	r24, 0x2e	; 46
 490:	68 2b       	or	r22, r24
 492:	6e bd       	out	0x2e, r22	; 46
 494:	08 95       	ret

00000496 <__vector_9>:
}

/*********************************Timer 1 ISR functions*********************************************/
ISR(TIMER1_OVF_vect)
{
 496:	1f 92       	push	r1
 498:	0f 92       	push	r0
 49a:	0f b6       	in	r0, 0x3f	; 63
 49c:	0f 92       	push	r0
 49e:	11 24       	eor	r1, r1
 4a0:	2f 93       	push	r18
 4a2:	3f 93       	push	r19
 4a4:	4f 93       	push	r20
 4a6:	5f 93       	push	r21
 4a8:	6f 93       	push	r22
 4aa:	7f 93       	push	r23
 4ac:	8f 93       	push	r24
 4ae:	9f 93       	push	r25
 4b0:	af 93       	push	r26
 4b2:	bf 93       	push	r27
 4b4:	ef 93       	push	r30
 4b6:	ff 93       	push	r31
	if(Timer1_OVF_Fptr!=NULLPTR)
 4b8:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <Timer1_OVF_Fptr>
 4bc:	f0 91 85 00 	lds	r31, 0x0085	; 0x800085 <Timer1_OVF_Fptr+0x1>
 4c0:	30 97       	sbiw	r30, 0x00	; 0
 4c2:	09 f0       	breq	.+2      	; 0x4c6 <__vector_9+0x30>
	{
		Timer1_OVF_Fptr();
 4c4:	09 95       	icall
	}
}
 4c6:	ff 91       	pop	r31
 4c8:	ef 91       	pop	r30
 4ca:	bf 91       	pop	r27
 4cc:	af 91       	pop	r26
 4ce:	9f 91       	pop	r25
 4d0:	8f 91       	pop	r24
 4d2:	7f 91       	pop	r23
 4d4:	6f 91       	pop	r22
 4d6:	5f 91       	pop	r21
 4d8:	4f 91       	pop	r20
 4da:	3f 91       	pop	r19
 4dc:	2f 91       	pop	r18
 4de:	0f 90       	pop	r0
 4e0:	0f be       	out	0x3f, r0	; 63
 4e2:	0f 90       	pop	r0
 4e4:	1f 90       	pop	r1
 4e6:	18 95       	reti

000004e8 <__udivmodsi4>:
 4e8:	a1 e2       	ldi	r26, 0x21	; 33
 4ea:	1a 2e       	mov	r1, r26
 4ec:	aa 1b       	sub	r26, r26
 4ee:	bb 1b       	sub	r27, r27
 4f0:	fd 01       	movw	r30, r26
 4f2:	0d c0       	rjmp	.+26     	; 0x50e <__udivmodsi4_ep>

000004f4 <__udivmodsi4_loop>:
 4f4:	aa 1f       	adc	r26, r26
 4f6:	bb 1f       	adc	r27, r27
 4f8:	ee 1f       	adc	r30, r30
 4fa:	ff 1f       	adc	r31, r31
 4fc:	a2 17       	cp	r26, r18
 4fe:	b3 07       	cpc	r27, r19
 500:	e4 07       	cpc	r30, r20
 502:	f5 07       	cpc	r31, r21
 504:	20 f0       	brcs	.+8      	; 0x50e <__udivmodsi4_ep>
 506:	a2 1b       	sub	r26, r18
 508:	b3 0b       	sbc	r27, r19
 50a:	e4 0b       	sbc	r30, r20
 50c:	f5 0b       	sbc	r31, r21

0000050e <__udivmodsi4_ep>:
 50e:	66 1f       	adc	r22, r22
 510:	77 1f       	adc	r23, r23
 512:	88 1f       	adc	r24, r24
 514:	99 1f       	adc	r25, r25
 516:	1a 94       	dec	r1
 518:	69 f7       	brne	.-38     	; 0x4f4 <__udivmodsi4_loop>
 51a:	60 95       	com	r22
 51c:	70 95       	com	r23
 51e:	80 95       	com	r24
 520:	90 95       	com	r25
 522:	9b 01       	movw	r18, r22
 524:	ac 01       	movw	r20, r24
 526:	bd 01       	movw	r22, r26
 528:	cf 01       	movw	r24, r30
 52a:	08 95       	ret

0000052c <__tablejump2__>:
 52c:	ee 0f       	add	r30, r30
 52e:	ff 1f       	adc	r31, r31
 530:	05 90       	lpm	r0, Z+
 532:	f4 91       	lpm	r31, Z
 534:	e0 2d       	mov	r30, r0
 536:	09 94       	ijmp

00000538 <__umulhisi3>:
 538:	a2 9f       	mul	r26, r18
 53a:	b0 01       	movw	r22, r0
 53c:	b3 9f       	mul	r27, r19
 53e:	c0 01       	movw	r24, r0
 540:	a3 9f       	mul	r26, r19
 542:	70 0d       	add	r23, r0
 544:	81 1d       	adc	r24, r1
 546:	11 24       	eor	r1, r1
 548:	91 1d       	adc	r25, r1
 54a:	b2 9f       	mul	r27, r18
 54c:	70 0d       	add	r23, r0
 54e:	81 1d       	adc	r24, r1
 550:	11 24       	eor	r1, r1
 552:	91 1d       	adc	r25, r1
 554:	08 95       	ret

00000556 <_exit>:
 556:	f8 94       	cli

00000558 <__stop_program>:
 558:	ff cf       	rjmp	.-2      	; 0x558 <__stop_program>
